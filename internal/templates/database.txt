package {{.package}}

import (
	"fmt"
	"time"

	"github.com/jmoiron/sqlx"
)

// OpenDatabase open database on specified data source.
func OpenDatabase(dataSourceName string) (db *sqlx.DB, err error) {
	// Connect to database
	db, err = sqlx.Connect("mysql", dataSourceName)
	if err != nil {
		err = fmt.Errorf("failed to open database: %v", err)
		return
	}
	db.SetConnMaxLifetime(time.Minute)

	// Disable foreign keys
	_, err = db.Exec(`SET FOREIGN_KEY_CHECKS = 0`)
	if err != nil {
		err = fmt.Errorf("failed to disable foreign key: %v", err)
		return
	}

	// If error happened, close database and enable foreign keys
	// before returning result
	defer func() {
		if err != nil {
			if db != nil {
				db.Exec(`SET FOREIGN_KEY_CHECKS = 1`)
				db.Close()
			}
			db = nil
		}
	}()

	// Generate tables
	{{range $ddl := .ddlQueries}}
		_, err = db.Exec({{$ddl.Name}})
		if err != nil {
			err = fmt.Errorf("failed to create table \"{{$ddl.TableName}}\": %v", err)
			return
		}

	{{end}}

	// Return database and error (if any)
	return
}

{{range $ddl := .ddlQueries}}
const {{$ddl.Name}} = `
{{$ddl.SQL}}`

{{end}}
// Code is generated by dbgen; DO NOT EDIT.

package {{.package}}

import (
	"fmt"
	"database/sql"
	"github.com/jmoiron/sqlx"
	{{range $import := .additionalImports -}}
	"{{$import}}"
	{{end -}}
)

{{range $query := .execQueries -}}
	{{$funcName := camel $query.Name -}}
	{{$sqlName := print "Sql" $funcName -}}
	{{$argsType := print $funcName "Args" -}}
	{{$sqlxFuncArgs := ""}}
	{{$sqlxFuncName := "Get"}}
	
	// {{$funcName}} is wrapper for exec query "{{$query.Name}}".
	{{if eq (len $query.Params) 0 -}}
		func {{$funcName}}(acc Accessor) (sql.Result, error) {
			return acc.Exec({{$sqlName}})
		}
	{{else -}}
		{{if eq (len $query.Params) 1 -}}
			{{$param := (index $query.Params 0) -}}
			{{$paramName := lowerCamel $param.Name -}}
			func {{$funcName}}(acc Accessor, {{$paramName}} interface{}) (sql.Result, error) {
				{{if $param.Required -}}
					if isEmpty({{$paramName}}) {
						return nil, fmt.Errorf("parameter \"{{$param.Name}}\" must not empty")
					}

				{{end -}}
				namedArgs := map[string]interface{}{
					"{{$param.Name}}": {{$paramName}},
				}

		{{else -}}
			func {{$funcName}}(acc Accessor, namedArgs {{$argsType}}) (sql.Result, error) {
				{{range $param := $query.Params -}}
				{{if $param.Required -}}
					{{$paramName := camel $param.Name -}}
					if isEmpty(namedArgs.{{$paramName}}) {
						return nil, fmt.Errorf("parameter \"{{$param.Name}}\" must not empty")
					}

				{{end -}}
				{{end -}}
		{{end -}}

			query, args, err := sqlx.Named({{$sqlName}}, namedArgs)
			if err != nil {
				return nil, err
			}

			query, args, err = sqlx.In(query, args...)
			if err != nil {
				return nil, err
			}

			return acc.Exec(query)
		}
	{{end}}
{{end}}

{{range $query := .execQueries -}}
	{{$funcName := camel $query.Name -}}
	{{$sqlName := print "Sql" $funcName -}}
	// Stmt{{$funcName}} is used to prepare exec query "{{$query.Name}}".
	func Stmt{{$funcName}}(acc Accessor) (*sqlx.NamedStmt, error) {
		return acc.PrepareNamed({{$sqlName}})
	}
{{end}}

{{range $query := .execQueries -}}
{{$sqlName := print "Sql" (camel $query.Name) -}}
// {{$sqlName}} is the raw SQL query for "{{$query.Name}}".
const {{$sqlName}} = `
{{$query.SQL}}`

{{end}}